int floorSqrt(int n) {
    // Initialize answer variable to store the result
    int ans = -1;

    // Initialize the search range
    int low = 1;
    int high = n;

    // Perform binary search
    while (low <= high) {
        // Calculate mid point using long long to avoid integer overflow
        long long mid = (low + high) / 2;

        // Calculate the square of the mid value
        long long val = mid * mid;

        // Check if the square is greater than n
        if (val > n) {
            // If so, move the search range to the left side of mid
            high = mid - 1;
        } else if (val <= n) {
            // If the square is less than or equal to n, update the answer and move the search range to the right side of mid
            ans = mid;
            low = mid + 1;
        }
    }

    // Return the result
    return ans;
}
